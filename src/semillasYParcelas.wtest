import semillas.*
import parcelas.*

describe "semillas y parcelas" {
	const mentita1 = new Menta(anioDeObtencion = 2004, altura = 1)
	const mentita2 = new Menta(anioDeObtencion = 2004, altura = 0.3)
	const soja1 = new Soja(anioDeObtencion = 2009, altura = 0.6)
	const quinoa1 = new Quinoa(anioDeObtencion = 2010, altura = 1,cuantasHorasDeSolTolera= 12)
	const quinoa2 = new Quinoa(anioDeObtencion = 2001, altura = 0.6,cuantasHorasDeSolTolera=9)
	
	
	
	fixture {
		quinoa1.espacioQueOcupa(0.5)
		quinoa2.espacioQueOcupa(0.5)
		plantacion1.ancho(20) 
		plantacion1.largo(1)
		plantacion1.horasDeSol(8)
		plantacion1.cantidadDePlantasAsociadas(0)
		plantacion1.plantar(mentita1)
		plantacion1.seAsociaBien(mentita1)
		
		
	}
	test "mentita1 y 2 daSemillas , espacioQueOcupa" {
		
		assert.that(mentita1.daSemillas())
		assert.equals(3,mentita1.espacioQueOcupa())
		
		
		assert.notThat(mentita2.daSemillas())
		assert.equals(0.9,mentita2.espacioQueOcupa())
	}
	test "soja 1 tolerancia, daSemillas, espacioQueOcupa" {
		assert.equals(7, soja1.cuantasHorasDeSolTolera())
		assert.notThat(soja1.daSemillas())
		assert.equals(0.3, soja1.espacioQueOcupa())
	}
	
	test "quinoa 1 y quinoa2 daSemillas" {
		assert.that(quinoa1.daSemillas())
		assert.that(quinoa2.daSemillas())
	}
	
	test "parcelas" {
		var plantacion1 = new ParcelasEcologicas(largo = 1, ancho = 20, horasDeSol = 8)
		plantacion1.plantar(new Soja(anioDeObtencion = 2004, altura = 2))
		plantacion1.plantar(new Soja(anioDeObtencion = 2004, altura = 2))
		plantacion1.plantar(new Soja(anioDeObtencion = 2004, altura = 2))
		plantacion1.plantar(new Soja(anioDeObtencion = 2004, altura = 2))
		// al intentar agregar una quinta planta, debe dar error.
		// con el assert.throwsException verifico que la ejecución deel closure que le mando por parámetro
		// dé error. Si ese código **no** da error, entonces falla el test.
		assert.throwsException({plantacion1.plantar(new Soja(anioDeObtencion = 2004, altura = 2))})
	}
}